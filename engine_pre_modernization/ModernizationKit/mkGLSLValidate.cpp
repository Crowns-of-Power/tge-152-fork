/*  mkGLSLValidate.cpp
 *  Copyright (C) 2007 Alex Scarborough
 *  For conditions of distribution and use, see copyright notice in ModernizationKit.h
 */

#include "ModernizationKit/mkGLSLValidate.h"
#include "core/stringTable.h"

bool GLSLValidate::mInit = false;
Vector<ValidationShader> GLSLValidate::shaders;

U32 GLSLValidate::getNumShaders()
{
   if(!mInit)
      init();

   return shaders.size();
}

void GLSLValidate::kill()
{
   shaders.clear();
}

// This isn't autogenerated, and writing it really sucked.

void GLSLValidate::init()
{
   mInit = true;

   shaders.setSize( 186 );
   
   U32 i = 0;
   
   shaders[i].file = StringTable->insert("CorrectBuiltInOveride.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectComma.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectConstFolding1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectConstFolding2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectConstruct.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectExtension1.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectExtension4.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectExtension10.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectFull.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectFull.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectFuncOverload.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectFuncOverload.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectFunction.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectFunction1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectModule.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectMatComma.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectMatComma2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectParse1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectParse2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectParse2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectParseTest.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectParseTest1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectPreprocess5.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectPreprocess8.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectPreprocess9.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectPreprocess11.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectSwizzle1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectSwizzle1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectSwizzle2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectSwizzle2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectSwizzle3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectUnsizedArray.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectVersion.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectVersion1.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectReservedWords.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CorrectScalarVectorExpressions.frag");
   shaders[i].vertex = false;
   shaders[i].pass = true;
   i++;
   
   shaders[i].file = StringTable->insert("CGDataTypes.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("CGStandardLibrary.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("IncludeDirective.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("MainParameters.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("ConstantConversions.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("TextureRectangleSamplers.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("FunctionParam.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("ParseTest3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("ParseTest4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array10.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array11.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array5.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array7.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array8.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("array9.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("attribute.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("attribute.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("attribute1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("attribute2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("break.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("comma1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("comma2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("comma2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("comma3.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("comment.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("conditional1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("conditional2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("conditional3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("constFunc.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("constructor1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("constructor2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("constructor3.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("continue.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType10.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType11.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType12.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType13.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType19.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType5.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType7.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType8.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dataType9.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dowhile.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dvec2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dvec3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("dvec4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension2.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension3.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension5.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension6.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension7.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension8.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("extension9.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("float2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("float3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("float4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("fragmentOnly.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("fragmentOnly1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("fragmentOnly2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("fragmentOnly3.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("fragmentOnly4.vert");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function10.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function2.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function5.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function7.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function8.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("function9.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("hvec2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("hvec3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("hvec4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("identifier1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("identifier2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("identifier3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("if1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("if2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("increment1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("increment2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("increment3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("increment4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("increment6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("main1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("main2.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("main3.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("matrix.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("normal.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser1.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser10.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser5.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser7.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser8.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("parser9.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess0.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess10.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("preprocess7.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("scoping1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("scoping2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct10.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct11.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct4.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct5.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct6.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct7.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct8.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("struct9.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("swizzle1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("swizzle2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("swizzle3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("typecast.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("uniform.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("uniform1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("varying.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("varying1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("varying2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("varying3.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("vector.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("version2.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("version3.V110.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("vertex.vert");
   shaders[i].vertex = true;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("vertexOnly.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("vertexOnly1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("vertexOnly2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("while.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("while1.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("while2.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
   
   shaders[i].file = StringTable->insert("TernaryOp.frag");
   shaders[i].vertex = false;
   shaders[i].pass = false;
   i++;
}


